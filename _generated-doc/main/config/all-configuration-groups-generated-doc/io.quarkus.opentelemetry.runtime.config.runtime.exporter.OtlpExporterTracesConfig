[{"configDocKey":{"type":"string","key":".endpoint","additionalKeys":[],"configDoc":"Sets the OTLP endpoint to send telemetry data. If unset, defaults to `OtlpExporterRuntimeConfig++#++DEFAULT_GRPC_BASE_URI`.\n\nThere is a generic property, that will apply to all signals and a signal specific one, following the pattern: `quarkus.otel.exporter.otlp..endpoint` where  is one of the supported signal types, like `traces` or `metrics`.\n\nIf protocol is `http/protobuf` the version and signal will be appended to the path (e.g. v1/traces or v1/metrics) and the default port will be `OtlpExporterRuntimeConfig++#++DEFAULT_HTTP_BASE_URI`.","withinAMap":false,"defaultValue":"http://localhost:4317/","javaDocSiteLink":"","docMapKey":"endpoint","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_ENDPOINT","enum":false}},{"configDocKey":{"type":"string","key":".headers","additionalKeys":[],"configDoc":"Key-value pairs to be used as headers associated with exporter requests. The format is similar to the `OTEL_EXPORTER_OTLP_HEADERS` environment variable, a list of key-value pairs separated by the \"=\" character. i.e.: key1=value1,key2=value2\n\nThere is a generic property, that will apply to all signals and a signal specific one, following the pattern: `quarkus.otel.exporter.otlp..headers` where  is one of the supported signal types, like `traces` or `metrics`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"headers","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_HEADERS","enum":false}},{"configDocKey":{"type":"io.quarkus.opentelemetry.runtime.config.runtime.exporter.CompressionType","key":".compression","additionalKeys":[],"configDoc":"Sets the method used to compress payloads. If unset, compression is disabled. Currently supported compression methods include `gzip` and `none`.\n\nThere is a generic property, that will apply to all signals and a signal specific one, following the pattern: `quarkus.otel.exporter.otlp..compression` where  is one of the supported signal types, like `traces` or `metrics`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"compression","configPhase":"BUILD_TIME","acceptedValues":["`gzip`","`none`"],"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_COMPRESSION","enum":true}},{"configDocKey":{"type":"java.time.Duration","key":".timeout","additionalKeys":[],"configDoc":"Sets the maximum time to wait for the collector to process an exported batch of telemetry data. If unset, defaults to `OtlpExporterRuntimeConfig++#++DEFAULT_TIMEOUT_SECS`s.\n\nThere is a generic property, that will apply to all signals and a signal specific one, following the pattern: `quarkus.otel.exporter.otlp..timeout` where  is one of the supported signal types, like `traces` or `metrics`.","withinAMap":false,"defaultValue":"10S","javaDocSiteLink":"https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html","docMapKey":"timeout","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_TIMEOUT","enum":false}},{"configDocKey":{"type":"string","key":".protocol","additionalKeys":[],"configDoc":"OTLP defines the encoding of telemetry data and the protocol used to exchange data between the client and the server. Depending on the exporter, the available protocols will be different.\n\nCurrently, only `grpc` and `http/protobuf` are allowed.\n\nPlease mind that changing the protocol requires changing the port in the endpoint as well.\n\nThere is a generic property, that will apply to all signals and a signal specific one, following the pattern: `quarkus.otel.exporter.otlp..protocol` where  is one of the supported signal types, like `traces` or `metrics`.","withinAMap":false,"defaultValue":"grpc","javaDocSiteLink":"","docMapKey":"protocol","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_PROTOCOL","enum":false}},{"configDocSection":{"name":"","optional":false,"withinAMap":false,"sectionDetails":null,"sectionDetailsTitle":".key-cert","configPhase":"BUILD_TIME","topLevelGrouping":"","configGroupType":"io.quarkus.opentelemetry.runtime.config.runtime.exporter.OtlpExporterConfig.KeyCert","showSection":false,"configDocItems":[{"configDocKey":{"type":"string","key":".key-cert.keys","additionalKeys":[],"configDoc":"Comma-separated list of the path to the key files (Pem format).","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"keys","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_KEY_CERT_KEYS","enum":false}},{"configDocKey":{"type":"string","key":".key-cert.certs","additionalKeys":[],"configDoc":"Comma-separated list of the path to the certificate files (Pem format).","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"certs","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_KEY_CERT_CERTS","enum":false}}],"anchorPrefix":null}},{"configDocSection":{"name":"","optional":false,"withinAMap":false,"sectionDetails":null,"sectionDetailsTitle":".trust-cert","configPhase":"BUILD_TIME","topLevelGrouping":"","configGroupType":"io.quarkus.opentelemetry.runtime.config.runtime.exporter.OtlpExporterConfig.TrustCert","showSection":false,"configDocItems":[{"configDocKey":{"type":"string","key":".trust-cert.certs","additionalKeys":[],"configDoc":"Comma-separated list of the trust certificate files (Pem format).","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"certs","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":true,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_TRUST_CERT_CERTS","enum":false}}],"anchorPrefix":null}},{"configDocKey":{"type":"string","key":".tls-configuration-name","additionalKeys":[],"configDoc":"The name of the TLS configuration to use.\n\nIf not set and the default TLS configuration is configured (`quarkus.tls.++*++`) then that will be used. If a name is configured, it uses the configuration from `quarkus.tls.<name>.++*++` If a name is configured, but no TLS configuration is found with that name then an error will be thrown.\n\nThere is a generic property, that will apply to all signals and a signal specific one, following the pattern: `quarkus.otel.exporter.otlp..tls-configuration-name` where  is one of the supported signal types, like `traces` or `metrics`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"tls-configuration-name","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_TLS_CONFIGURATION_NAME","enum":false}},{"configDocSection":{"name":"","optional":false,"withinAMap":false,"sectionDetails":null,"sectionDetailsTitle":".proxy-options","configPhase":"BUILD_TIME","topLevelGrouping":"","configGroupType":"io.quarkus.opentelemetry.runtime.config.runtime.exporter.OtlpExporterConfig.ProxyConfig","showSection":false,"configDocItems":[{"configDocKey":{"type":"boolean","key":".proxy-options.enabled","additionalKeys":[],"configDoc":"If proxy connection must be used.\n\nThere is a generic property, that will apply to all signals and a signal specific one, following the pattern: `quarkus.otel.exporter.otlp..proxy-options.enabled` where  is one of the supported signal types, like `traces` or `metrics`.","withinAMap":false,"defaultValue":"false","javaDocSiteLink":"","docMapKey":"enabled","configPhase":"BUILD_TIME","acceptedValues":null,"optional":false,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_PROXY_OPTIONS_ENABLED","enum":false}},{"configDocKey":{"type":"string","key":".proxy-options.username","additionalKeys":[],"configDoc":"Set proxy username.\n\nThere is a generic property, that will apply to all signals and a signal specific one, following the pattern: `quarkus.otel.exporter.otlp..proxy-options.username` where  is one of the supported signal types, like `traces` or `metrics`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"username","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_PROXY_OPTIONS_USERNAME","enum":false}},{"configDocKey":{"type":"string","key":".proxy-options.password","additionalKeys":[],"configDoc":"Set proxy password.\n\nThere is a generic property, that will apply to all signals and a signal specific one, following the pattern: `quarkus.otel.exporter.otlp..proxy-options.password` where  is one of the supported signal types, like `traces` or `metrics`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"password","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_PROXY_OPTIONS_PASSWORD","enum":false}},{"configDocKey":{"type":"java.lang.Integer","key":".proxy-options.port","additionalKeys":[],"configDoc":"Set proxy port.\n\nThere is a generic property, that will apply to all signals and a signal specific one, following the pattern: `quarkus.otel.exporter.otlp..proxy-options.port` where  is one of the supported signal types, like `traces` or `metrics`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"port","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_PROXY_OPTIONS_PORT","enum":false}},{"configDocKey":{"type":"string","key":".proxy-options.host","additionalKeys":[],"configDoc":"Set proxy host.\n\nThere is a generic property, that will apply to all signals and a signal specific one, following the pattern: `quarkus.otel.exporter.otlp..proxy-options.host` where  is one of the supported signal types, like `traces` or `metrics`.","withinAMap":false,"defaultValue":"","javaDocSiteLink":"","docMapKey":"host","configPhase":"BUILD_TIME","acceptedValues":null,"optional":true,"list":false,"withinAConfigGroup":true,"topLevelGrouping":"","since":null,"environmentVariable":"_PROXY_OPTIONS_HOST","enum":false}}],"anchorPrefix":null}}]